{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/cat_standing_animated.gif","p2-homeworks/h5/Header.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/pages/Menu/SidebarData.tsx","p2-homeworks/h5/pages/Menu/Navbar.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/pages/Menu/Navbar.module.css"],"names":["module","exports","Header","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","e","currentTarget","value","key","placeholder","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","SuperButton","red","finalClassName","default","style","color","background","margin","border","padding","borderRadius","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","onClick","prevStValue","PreJunior","Error404","src","logo","alt","to","PATH","PRE_JUNIOR","Junior","JuniorPlus","JUNIOR","JUNIOR_PLUS","Routes","path","exact","render","SidebarData","title","icon","cName","nav_text","Navbar","sidebar","setSidebar","showSidebar","Provider","navbar","menu_bars","nav_menu","active","nav_menu_items","navbar_toggle","map","item","index","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,QAAU,qBAAqB,SAAW,wB,mBCD5GD,EAAOC,QAAU,IAA0B,mD,8JCW5BC,MATf,WACI,OACI,iD,sCCyDOC,EA9C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAC,EAIH,EAJGA,UAAWC,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBE,GAAgC,IAEnEI,EAAmB,UAAMD,IAAEE,WAAR,YAAsBN,GAAwB,IAEvE,OACI,oCACI,yCACIN,KAAM,OACNC,SAtBa,SAACY,GACtBZ,GACGA,EAASY,GAEZX,GAAgBA,EAAaW,EAAEC,cAAcC,QAmBrCZ,WAjBe,SAACU,GACxBV,GAAcA,EAAWU,GAEf,UAAVA,EAAEG,KACCZ,GACAA,KAaKE,UAAWK,EACXM,YAAa,iHAETT,IAEPH,GAAS,0BAAMC,UAAWG,GAAqBJ,KCsB7Ca,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAhB,EAKH,EALGA,QACAiB,EAIH,EAJGA,UAEGb,EAEN,8DAC+Bc,oBAAkB,GADjD,mBACMC,EADN,KACgBC,EADhB,OAE8DH,GAAa,GAArEI,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,cAAepB,EAF/B,EAE+BA,UAAcqB,EAF7C,wDAoBKpB,EAAmB,+KAAN,WAA4CD,GAE/D,OACI,oCACKiB,EAEO,kBAAC,EAAD,eACIJ,WAAS,EACTC,OAnBG,SAACP,GACpBW,GAAY,GAEZJ,GAAUA,EAAOP,IAiBDT,QAzBI,WACpBoB,GAAY,GAEZpB,GAAWA,MAwBSI,IAGR,wCACIkB,cArBU,SAACb,GAC3BW,GAAY,GAEZE,GAAiBA,EAAcb,IAmBfP,UAAWC,GAEPoB,GAGHF,GAAYjB,EAAUO,S,iBCnChCa,EAxBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKvB,EAGR,EAHQA,UACFE,EAEN,mCACKsB,EAAc,UAAMD,EAAMnB,IAAEmB,IAAMnB,IAAEqB,QAAtB,YAAiCzB,GAErD,OACI,0CAAQ0B,MAAO,CACXC,MAAO,OACPC,WAAY,QACZC,OAAQ,OACRC,OAAQ,OACRC,QAAS,MACTC,aAAc,OAGVhC,UAAWwB,GACPtB,KC3Bb,SAAS+B,EAAavB,EAAawB,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQ7B,EAAKyB,GAIvB,SAASK,EAAgB9B,EAAa+B,GACzC,IAAMN,EAAgBG,aAAaI,QAAQhC,GAE3C,OADsB,OAAlByB,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EAWXR,EAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,EAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,ICerDC,MAnCf,WAAgB,IAAD,EACe9B,mBAAiB,IADhC,mBACJP,EADI,KACGsC,EADH,KAWX,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACItC,MAAOA,EACPb,aAAcmD,EACdhC,UAAW,CAACI,SAAUV,OAAQuC,EAAY,oBAGlD,kBAAC,EAAD,CAAaC,QArBR,WACThB,EAAkB,sBAAuBxB,KAoBrC,QACA,kBAAC,EAAD,CAAawC,QAnBL,WACZ,IAAIC,EAAcV,EAAa,sBAAuB/B,GACtDsC,EAASG,KAiBL,WAEA,6BAGA,+BCfGC,MAbf,WACI,OACI,6BAKI,kBAAC,EAAD,Q,wBCuCGC,MAhDf,WAGI,OACI,yBAAK1B,MAAO,CACR,QAAW,OACX,oBAAuB,cACvB,iBAAoB,oBAEpB,yBAAKA,MAAO,CACR,MAAS,MACT,WAAc,MACd,QAAW,OACZ2B,IAAKC,IAAMC,IAAK,kBACnB,wBAAI7B,MAAO,CACP,aAAgB,SAChB,MAAS,OACT,SAAY,OACZ,WAAc,UACd,WAAc,MACd,QAAW,QANf,SAQA,wBAAIA,MAAO,CACP,SAAY,gBACZ,MAAS,OACT,UAAa,IAHjB,8CAKA,uBAAGA,MAAO,CACN,SAAY,gBACZ,OAAU,eAFd,sGAOA,4BAAQuB,QAAS,kBAAM,kBAAC,IAAD,CAAUO,GAAIC,EAAKC,cAAehC,MAAO,CAC5D,SAAY,gBACZ,SAAY,OACZ,MAAS,MACT,OAAU,QACX,kBAAC,IAAD,CAAMA,MAAO,CACZ,eAAkB,OAClB,MAAS,SACV8B,GAAG,KAHH,uDCtCAG,MAJf,WACI,OAAO,wCCGIC,MAJf,WACI,OAAO,4CCIEH,EAAO,CAChBC,WAAY,cACZG,OAAQ,UACRC,YAAa,eA2BFC,MAvBf,WACI,OACI,6BAEI,kBAAC,IAAD,KAII,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUV,GAAIC,EAAKC,gBAEzD,kBAAC,IAAD,CAAOM,KAAM,cAAeC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,SAChD,kBAAC,IAAD,CAAOF,KAAM,UAAWC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAM,eAAgBC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,SARrD,gBAYI,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,EAAD,Y,wCCMtBC,EArB6B,CACxC,CACIC,MAAO,OACPJ,KAAM,IACNK,KAAM,kBAAC,IAAD,MACNC,MAAOlE,IAAEmE,UAEb,CACIH,MAAO,SACPJ,KAAM,UACNK,KAAM,kBAAC,IAAD,MACNC,MAAOlE,IAAEmE,UAEb,CACIH,MAAO,cACPJ,KAAM,eACNK,KAAM,kBAAC,IAAD,MACNC,MAAOlE,IAAEmE,W,OCWFC,MAnCf,WAAmB,IAAD,EACgBxD,oBAAS,GADzB,mBACPyD,EADO,KACEC,EADF,KAERC,EAAc,kBAAMD,GAAYD,IACtC,OACI,oCACI,kBAAC,IAAYG,SAAb,CAAsBnE,MAAO,CAACkB,MAAO,SACjC,yBAAK3B,UAAWI,IAAEyE,QACd,kBAAC,IAAD,CAAMrB,GAAG,IAAIxD,UAAWI,IAAE0E,WACtB,kBAAC,IAAD,CAAgB7B,QAAS0B,MAGjC,yBAAK3E,UAAWyE,EAAO,UAAMrE,IAAE2E,SAAR,YAAoB3E,IAAE4E,QAAtB,UAAoC5E,IAAE2E,WACzD,wBAAI/E,UAAWI,IAAE6E,eAAgBhC,QAAS0B,GACtC,wBAAI3E,UAAWI,IAAE8E,eACb,kBAAC,IAAD,CAAM1B,GAAG,IAAIxD,UAAWI,IAAE0E,WACtB,kBAAC,IAAD,QAGPX,EAAYgB,KAAI,SAACC,EAAMC,GACpB,OACI,wBAAI3E,IAAK2E,EAAOrF,UAAWoF,EAAKd,OAC5B,kBAAC,IAAD,CAAMd,GAAI4B,EAAKpB,MACVoB,EAAKf,KACN,8BAAOe,EAAKhB,iBCVrCkB,MAff,WACI,OACI,6BAEI,kBAAC,IAAD,KAEA,kBAAC,EAAD,MACI,kBAAC,EAAD,MACJ,kBAAC,EAAD,SCQGC,MAdf,WACI,OACI,yBAAKvF,UAAWI,IAAEmF,KACd,iDAKA,kBAAC,EAAD,QCJQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAS3B,OACL,kBAAC,IAAM4B,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxG,GACLyG,QAAQzG,MAAMA,EAAM0G,a,kBEhJ5BnH,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,SAAW,yBAAyB,OAAS,uBAAuB,SAAW,yBAAyB,eAAiB,+BAA+B,cAAgB,8BAA8B,WAAa,8B","file":"static/js/main.162c8fe5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3wDD5\",\"errorInput\":\"SuperInputText_errorInput__1V9xx\",\"error\":\"SuperInputText_error__2kMXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Ba2MG\",\"red\":\"SuperButton_red__1EjfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__8sYPg\",\"home\":\"App_home__2-iE2\",\"reports\":\"App_reports__34fPl\",\"products\":\"App_products__1rMne\"};","module.exports = __webpack_public_path__ + \"static/media/cat_standing_animated.01b625ce.gif\";","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    // const finalInputClassName = `${s.errorInput} ${className ? className : ''}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${s.superInput} ${className ? className : ''}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Введите приветствие'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n;\r\n\r\nexport default SuperInputText;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button style={{\r\n            color: 'gold',\r\n            background: 'black',\r\n            margin: '10px',\r\n            border: 'none',\r\n            padding: '5px',\r\n            borderRadius: '20%',\r\n\r\n        }}\r\n                className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        let prevStValue = restoreState(\"editable-span-value\", value);\r\n        setValue(prevStValue)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW6/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport logo from './cat_standing_animated.gif'\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\n\r\nfunction Error404() {\r\n    // grid-template-columns: 45% 54%;\r\n    // grid-template-rows: 20% 20% 20% 20%;\r\n    return (\r\n        <div style={{\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"40% 40% 20%\",\r\n            \"gridTemplateRows\": \"20% 20% 20% 20%\",\r\n        }}>\r\n            <img style={{\r\n                \"width\": \"32%\",\r\n                \"gridColumn\": \"1/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }} src={logo} alt={\"404 error cat\"}/>\r\n            <h1 style={{\r\n                \"marginBottom\": \"0.5rem\",\r\n                \"color\": \"#e32\",\r\n                \"fontSize\": \"4rem\",\r\n                \"lineHeight\": \"4.15rem\",\r\n                \"gridColumn\": \"2/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }}>Oops.</h1>\r\n            <h2 style={{\r\n                \"gridArea\": \"2 / 2 / 2 / 5\",\r\n                \"color\": \"#e32\",\r\n                \"marginTop\": 0,\r\n            }}>We can't find the page you're looking for.</h2>\r\n            <p style={{\r\n                \"gridArea\": \"3 / 2 / 2 / 3\",\r\n                \"margin\": \"38px 0 0 0\",\r\n            }}>It may have expired, or there could be a typo. Maybe you can find what you need from our homepage.\r\n            </p>\r\n            {/*<div>404</div>*/}\r\n            {/*<div>Page not found!</div>*/}\r\n            <button onClick={() => <Redirect to={PATH.PRE_JUNIOR}/>} style={{\r\n                \"gridArea\": \"3 / 2 / 4 / 3\",\r\n                \"fontSize\": \"300%\",\r\n                \"width\": \"85%\",\r\n                \"height\": \"62%\",\r\n            }}><Link style={{\r\n                \"textDecoration\": \"none\",\r\n                \"color\": \"black\",\r\n            }} to=\"/\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</Link>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\n\r\nfunction Junior() {\r\n    return <div>Junior</div>;\r\n}\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return <div>JuniorPlus</div>;\r\n}\r\n\r\nexport default JuniorPlus;","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"junior-plus\"\r\n}\r\n\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={\"/pre-junior\"} exact render={() => <PreJunior/>}/>\r\n                <Route path={\"/junior\"} exact render={() => <Junior/>}/>\r\n                <Route path={\"/junior-plus\"} exact render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport s from './Navbar.module.css'\r\n\r\nexport type SidebarDataPropsType =\r\n    {\r\n        title: string,\r\n        path: string,\r\n        icon: JSX.Element,\r\n        cName: string,\r\n    }\r\n\r\n\r\nconst SidebarData: SidebarDataPropsType[] = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: s.nav_text,\r\n    },\r\n    {\r\n        title: 'Junior',\r\n        path: '/junior',\r\n        icon: <IoIcons.IoIosPaper/>,\r\n        cName: s.nav_text\r\n    },\r\n    {\r\n        title: 'Junior-plus',\r\n        path: '/junior-plus',\r\n        icon: <FaIcons.FaCartPlus/>,\r\n        cName: s.nav_text\r\n    }\r\n]\r\n\r\nexport default SidebarData;","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\"\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport SidebarData from \"./SidebarData\";\r\nimport {IconContext} from \"react-icons\";\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false)\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{color: '#fff'}}>\r\n                <div className={s.navbar}>\r\n                    <Link to=\"#\" className={s.menu_bars}>\r\n                        <FaIcons.FaBars onClick={showSidebar}/>\r\n                    </Link>\r\n                </div>\r\n                <nav className={sidebar ? `${s.nav_menu} ${s.active}` : `${s.nav_menu}`}>\r\n                    <ul className={s.nav_menu_items} onClick={showSidebar}>\r\n                        <li className={s.navbar_toggle}>\r\n                            <Link to='#' className={s.menu_bars} >\r\n                                <AiIcons.AiOutlineClose/>\r\n                            </Link>\r\n                        </li>\r\n                        {SidebarData.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.cName}>\r\n                                    <Link to={item.path}>\r\n                                        {item.icon}\r\n                                        <span>{item.title}</span>\r\n                                    </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Navbar from \"./pages/Menu/Navbar\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n                <Navbar/>\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__23pUo\",\"menu_bars\":\"Navbar_menu_bars__P99PP\",\"nav_menu\":\"Navbar_nav_menu__aPDiy\",\"active\":\"Navbar_active__HuaJe\",\"nav_text\":\"Navbar_nav_text__e_peC\",\"nav_menu_items\":\"Navbar_nav_menu_items__2k1pO\",\"navbar_toggle\":\"Navbar_navbar_toggle__8BRxb\",\"activeLink\":\"Navbar_activeLink__1itpN\"};"],"sourceRoot":""}